{"version":3,"sources":["services/forecast.service.js"],"names":["ForecastService","host","apiToken","process","env","FORECAST_TOKEN","latitude","longitude","lang","units","axios","get","params","extend","then","response","data","currently","error","console","log"],"mappings":";;;;;;;;;;;;;AAAA;;IAEqBA,e;;;AACnB,6BAAc;AAAA;AACZ,SAAKC,IAAL,GAAY,kCAAZ;AACA,SAAKC,QAAL,GAAgBC,OAAO,CAACC,GAAR,CAAYC,cAA5B;AACA,SAAKC,QAAL,GAAgB,SAAhB;AACA,SAAKC,SAAL,GAAiB,SAAjB;AACA,SAAKC,IAAL,GAAY,IAAZ;AACA,SAAKC,KAAL,GAAa,IAAb;AACD;;;;yCAEoB;AACnB,aAAOC,kBACJC,GADI,WACG,KAAKV,IADR,cACgB,KAAKC,QADrB,cACiC,KAAKI,QADtC,cACkD,KAAKC,SADvD,GACoE;AACvEK,QAAAA,MAAM,EAAE;AACNC,UAAAA,MAAM,EAAE,WADF;AAENL,UAAAA,IAAI,EAAE,KAAKA,IAFL;AAGNC,UAAAA,KAAK,EAAE,KAAKA;AAHN;AAD+D,OADpE,EAQJK,IARI,CAQC,UAACC,QAAD;AAAA,eAAcA,QAAQ,CAACC,IAAT,CAAcC,SAA5B;AAAA,OARD,WASE,UAACC,KAAD,EAAW;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EADgB,CACI;AACrB,OAXI,CAAP;AAYD;;;oCAEe;AACdR,wBACGC,GADH,WACU,KAAKV,IADf,cACuB,KAAKC,QAD5B,cACwC,KAAKI,QAD7C,cACyD,KAAKC,SAD9D,GAC2E;AACvEK,QAAAA,MAAM,EAAE;AACNC,UAAAA,MAAM,EAAE,QADF;AAENL,UAAAA,IAAI,EAAE,KAAKA,IAFL;AAGNC,UAAAA,KAAK,EAAE,KAAKA;AAHN;AAD+D,OAD3E,EAQGK,IARH,CAQQ,UAACC,QAAD,EAAc;AAClBI,QAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACC,IAArB;AACD,OAVH,WAWS,UAACE,KAAD,EAAW;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,OAbH;AAcD","sourcesContent":["import axios from 'axios';\n\nexport default class ForecastService {\n  constructor() {\n    this.host = 'https://api.darksky.net/forecast';\n    this.apiToken = process.env.FORECAST_TOKEN;\n    this.latitude = 46.867515;\n    this.longitude = 32.001542;\n    this.lang = 'ru';\n    this.units = 'si';\n  }\n\n  getCurrentForecast() {\n    return axios\n      .get(`${this.host}/${this.apiToken}/${this.latitude},${this.longitude}`, {\n        params: {\n          extend: 'currently',\n          lang: this.lang,\n          units: this.units,\n        },\n      })\n      .then((response) => response.data.currently)\n      .catch((error) => {\n        console.log(error); // TODO: Error message for chat.\n      });\n  }\n\n  getHourlyData() {\n    axios\n      .get(`${this.host}/${this.apiToken}/${this.latitude},${this.longitude}`, {\n        params: {\n          extend: 'hourly',\n          lang: this.lang,\n          units: this.units,\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n}\n"],"file":"forecast.service.js"}